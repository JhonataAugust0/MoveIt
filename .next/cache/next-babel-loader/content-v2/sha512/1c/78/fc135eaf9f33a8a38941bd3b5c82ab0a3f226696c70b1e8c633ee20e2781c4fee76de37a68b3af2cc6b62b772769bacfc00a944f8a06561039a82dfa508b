{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jhonata/Jhonata/Programa\\xE7\\xE3o/Projetos/NLW04/MoveIt-master/src/components/ChallengeBox.tsx\",\n    _s = $RefreshSig$();\n\n/** Imports\n *  Importação do useContext, função do react que per- \n * mite que a aplicação utilize o conceito de contextos.\n * Importação dos contexts de Challenges e de Countdown\n * e suas estilizações. \n */\nimport { useContext } from \"react\";\nimport { ChallengesContext } from \"../contexts/ChallengesContext\";\nimport { CountdownContext } from \"../contexts/CountdownContext\";\nimport styles from \"../styles/components/ChallengeBox.module.css\";\n/** export function ChallengeBox\n *  É a função que tem a responsabilidade de lançar os\n * desafios para os usuários da aplicação assim que um\n * cilco é encerrado. \n * Ela também tem a função de demonstrar os botões de \n * falha e êxito para o usuário, controlando, a partir\n * da entrada do usuário, se ele recebe ou não o XP da-\n * quele desafio.\n */\n\nexport function ChallengeBox() {\n  _s();\n\n  var _useContext = useContext(ChallengesContext),\n      activeChallenge = _useContext.activeChallenge,\n      resetChallenge = _useContext.resetChallenge,\n      completedChallenge = _useContext.completedChallenge;\n\n  var _useContext2 = useContext(CountdownContext),\n      resetCountdown = _useContext2.resetCountdown;\n\n  function handleChallengeSucceeded() {\n    completedChallenge();\n    resetCountdown();\n  }\n\n  function handleChallengeFailed() {\n    resetChallenge();\n    resetCountdown();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.challengeBoxContainer,\n    children: activeChallenge ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.challengeActive,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [\"Ganhe \", activeChallenge.amount, \" xp\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/\".concat(activeChallenge.type, \".svg\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Novo desafio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: activeChallenge.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.challengeFailedButton,\n          onClick: handleChallengeFailed,\n          children: \"Falhei\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.challengeSucceededButton,\n          onClick: handleChallengeSucceeded,\n          children: \"Completei\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.challengeNotActive,\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Finalize um ciclo para receber um desafio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/level-up.svg\",\n          alt: \"Level Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), \"Avance de level completando desafios!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengeBox, \"le009C9e/qHs5WW+tBVX+NLT+YQ=\");\n\n_c = ChallengeBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeBox\");","map":{"version":3,"sources":["/home/jhonata/Jhonata/Programação/Projetos/NLW04/MoveIt-master/src/components/ChallengeBox.tsx"],"names":["useContext","ChallengesContext","CountdownContext","styles","ChallengeBox","activeChallenge","resetChallenge","completedChallenge","resetCountdown","handleChallengeSucceeded","handleChallengeFailed","challengeBoxContainer","challengeActive","amount","type","description","challengeFailedButton","challengeSucceededButton","challengeNotActive"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAOC,MAAP,MAAmB,8CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,GAAwB;AAAA;;AAAA,oBACmCJ,UAAU,CACxEC,iBADwE,CAD7C;AAAA,MACrBI,eADqB,eACrBA,eADqB;AAAA,MACJC,cADI,eACJA,cADI;AAAA,MACYC,kBADZ,eACYA,kBADZ;;AAAA,qBAIFP,UAAU,CAACE,gBAAD,CAJR;AAAA,MAIrBM,cAJqB,gBAIrBA,cAJqB;;AAM3B,WAASC,wBAAT,GAAoC;AAClCF,IAAAA,kBAAkB;AAClBC,IAAAA,cAAc;AACf;;AAED,WAASE,qBAAT,GAAiC;AAC/BJ,IAAAA,cAAc;AACdE,IAAAA,cAAc;AACf;;AAEH,sBACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACQ,qBAAvB;AAAA,cACGN,eAAe,gBACd;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACS,eAAvB;AAAA,8BACE;AAAA,6BAAeP,eAAe,CAACQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,gCACE;AAAK,UAAA,GAAG,kBAAWR,eAAe,CAACS,IAA3B;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAIT,eAAe,CAACU;AAApB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eASE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEZ,MAAM,CAACa,qBAFpB;AAGE,UAAA,OAAO,EAAEN,qBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEP,MAAM,CAACc,wBAFpB;AAGE,UAAA,OAAO,EAAER,wBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADc,gBA4Bd;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACe,kBAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAK,UAAA,GAAG,EAAC,oBAAT;AAA8B,UAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BJ;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GAxDed,Y;;KAAAA,Y","sourcesContent":["/** Imports\n *  Importação do useContext, função do react que per- \n * mite que a aplicação utilize o conceito de contextos.\n * Importação dos contexts de Challenges e de Countdown\n * e suas estilizações. \n */\nimport { useContext } from \"react\";\nimport { ChallengesContext } from \"../contexts/ChallengesContext\";\nimport { CountdownContext } from \"../contexts/CountdownContext\";\n\nimport styles from \"../styles/components/ChallengeBox.module.css\";\n\n/** export function ChallengeBox\n *  É a função que tem a responsabilidade de lançar os\n * desafios para os usuários da aplicação assim que um\n * cilco é encerrado. \n * Ela também tem a função de demonstrar os botões de \n * falha e êxito para o usuário, controlando, a partir\n * da entrada do usuário, se ele recebe ou não o XP da-\n * quele desafio.\n */\nexport function ChallengeBox() {\n  const { activeChallenge, resetChallenge, completedChallenge } = useContext(\n    ChallengesContext\n  );\n  const { resetCountdown } = useContext(CountdownContext)\n\n    function handleChallengeSucceeded() {\n      completedChallenge()\n      resetCountdown()\n    }\n\n    function handleChallengeFailed() {\n      resetChallenge()      \n      resetCountdown()\n    }\n\n  return (\n    <div className={styles.challengeBoxContainer}>\n      {activeChallenge ? (\n        <div className={styles.challengeActive}>\n          <header>Ganhe {activeChallenge.amount} xp</header>\n\n          <main>\n            <img src={`icons/${activeChallenge.type}.svg`} />\n            <strong>Novo desafio</strong>\n            <p>{activeChallenge.description}</p>\n          </main>\n\n          <footer>\n            <button\n              type=\"button\"\n              className={styles.challengeFailedButton}\n              onClick={handleChallengeFailed}\n            >\n              Falhei\n            </button>\n            <button\n              type=\"button\"\n              className={styles.challengeSucceededButton}\n              onClick={handleChallengeSucceeded}\n            >\n              Completei\n            </button>\n          </footer>\n        </div>\n      ) : (\n        <div className={styles.challengeNotActive}>\n          <strong>Finalize um ciclo para receber um desafio</strong>\n          <p>\n            <img src=\"icons/level-up.svg\" alt=\"Level Up\" />\n            Avance de level completando desafios!\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}