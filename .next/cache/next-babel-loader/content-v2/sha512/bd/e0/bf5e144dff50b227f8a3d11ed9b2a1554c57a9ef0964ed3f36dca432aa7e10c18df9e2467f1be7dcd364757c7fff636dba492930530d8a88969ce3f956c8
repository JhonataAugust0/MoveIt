{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/jhonata/Jhonata/Programa\\xE7\\xE3o/Projetos/NLW04/MoveIt-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/jhonata/Jhonata/Programa\\xE7\\xE3o/Projetos/NLW04/MoveIt-master/src/components/Countdown.tsx\",\n    _s = $RefreshSig$();\n\n/** Imports\n *  Importação do useContext, função do react que per- \n * mite que a aplicação utilize o conceito de contextos.\n * Importação do context de CountDown e a estilização \n * do componente,\n */\nimport { useContext } from \"react\";\nimport { CountdownContext } from \"../contexts/CountdownContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\n/** export function Countdown\n *  Countdown é a função responsável por fazer a crono\n * metragem dos ciclos pomodoro da aplicação. Ela uti-\n * liza do context de CountDown, usando seus parâmetros\n * para fazer a contagem, inicialização e finalização \n * de um ciclo e sua reinicialização, além de verificar \n * se há um ciclo ativo. \n */\n\nexport function Countdown() {\n  _s();\n\n  var _useContext = useContext(CountdownContext),\n      minutes = _useContext.minutes,\n      seconds = _useContext.seconds,\n      hasFinished = _useContext.hasFinished,\n      isActive = _useContext.isActive,\n      startCountdown = _useContext.startCountdown,\n      resetCountdown = _useContext.resetCountdown;\n\n  var _String$padStart$spli = String(minutes).padStart(2, \"0\").split(\"\"),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, \"0\").split(\"\"),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um novo ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Countdown, \"/5uu+jvfZbtDvSCwrDiF3VJk8dk=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/home/jhonata/Jhonata/Programação/Projetos/NLW04/MoveIt-master/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minutes","seconds","hasFinished","isActive","startCountdown","resetCountdown","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,oBAStBH,UAAU,CAAEC,gBAAF,CATY;AAAA,MAGxBG,OAHwB,eAGxBA,OAHwB;AAAA,MAIxBC,OAJwB,eAIxBA,OAJwB;AAAA,MAKxBC,WALwB,eAKxBA,WALwB;AAAA,MAMxBC,QANwB,eAMxBA,QANwB;AAAA,MAOxBC,cAPwB,eAOxBA,cAPwB;AAAA,MAQxBC,cARwB,eAQxBA,cARwB;;AAAA,8BAWQC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAXR;AAAA;AAAA,MAWnBC,UAXmB;AAAA,MAWPC,WAXO;;AAAA,+BAYQJ,MAAM,CAACL,OAAD,CAAN,CAAgBM,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAZR;AAAA;AAAA,MAYnBG,UAZmB;AAAA,MAYPC,WAZO;;AAc1B,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACe,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGV,WAAW,gBACV;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,SAAS,EAAEJ,MAAM,CAACgB,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAKV;AAAA,gBACGX,QAAQ,gBACP;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,YAAKL,MAAM,CAACgB,eAAZ,cAA+BhB,MAAM,CAACiB,qBAAtC,CAFX;AAGE,QAAA,OAAO,EAAEV,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,gBASP;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAEP,MAAM,CAACgB,eAFpB;AAGE,QAAA,OAAO,EAAEV,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ,qBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GAvDeL,S;;KAAAA,S","sourcesContent":["/** Imports\n *  Importação do useContext, função do react que per- \n * mite que a aplicação utilize o conceito de contextos.\n * Importação do context de CountDown e a estilização \n * do componente,\n */\nimport { useContext } from \"react\";\nimport { CountdownContext } from \"../contexts/CountdownContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\n\n/** export function Countdown\n *  Countdown é a função responsável por fazer a crono\n * metragem dos ciclos pomodoro da aplicação. Ela uti-\n * liza do context de CountDown, usando seus parâmetros\n * para fazer a contagem, inicialização e finalização \n * de um ciclo e sua reinicialização, além de verificar \n * se há um ciclo ativo. \n */\nexport function Countdown() {\n\n  const { \n    minutes, \n    seconds, \n    hasFinished, \n    isActive, \n    startCountdown, \n    resetCountdown \n  } = useContext (CountdownContext)\n\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\n\n  return (\n    <div>\n      <div className={styles.countdownContainer}>\n        <div>\n          <span>{minuteLeft}</span>\n          <span>{minuteRight}</span>\n        </div>\n        <span>:</span>\n        <div>\n          <span>{secondLeft}</span>\n          <span>{secondRight}</span>\n        </div>\n      </div>\n\n      {hasFinished ? (\n        <button disabled className={styles.countdownButton}>\n          Ciclo encerrado\n        </button>\n      ) : (\n        <>\n          {isActive ? (\n            <button\n              type=\"button\"\n              className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n              onClick={resetCountdown}\n            >\n              Abandonar ciclo\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className={styles.countdownButton}\n              onClick={startCountdown}\n            >\n              Iniciar um novo ciclo\n            </button>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}