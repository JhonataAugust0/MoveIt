{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jhonata/Downloads/MoveIt-master/src/contexts/ChallengesContext.tsx\";\n\n/** Imports\n * ImportaÃ§Ã£o do createContext, useState, ReactNode, \n * useEffect da biblioteca react, alÃ©m da importaÃ§Ã£o dos\n * desafios contidos no arquivo challenges.json, \n */\nimport { createContext, useState, useEffect } from \"react\";\nimport challenges from \"../../challenges.json\";\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio ðŸ¥³', {\n        body: `Valendo ${challenge.amount}xp!`\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completedChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallenge;\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      levelUp,\n      currentExperience,\n      setCurrentExperience,\n      challengesCompleted,\n      experienceToNextLevel,\n      setChallengesCompleted,\n      startNewChallenge,\n      setActiveChallenge,\n      activeChallenge,\n      resetChallenge,\n      completedChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/jhonata/Downloads/MoveIt-master/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","experienceToNextLevel","Math","pow","Notification","requestPermission","levelUp","activeChallenge","setActiveChallenge","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completedChallenge","finalExperience"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAT,EAAwBC,QAAxB,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AA6BA,OAAO,MAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASK,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAmE;AACxE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACQ,iBAAD;AAAA,OAAoBC;AAApB,MAA4CT,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACU,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDX,QAAQ,CAAC,CAAD,CAA9D;AAEA,QAAMY,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACR,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,YAAY,CAACC,iBAAb;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,OAAT,GAAmB;AACjBV,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,QAAM;AAAA,OAACY,eAAD;AAAA,OAAkBC;AAAlB,MAAwCnB,QAAQ,CAAC,IAAD,CAAtD;;AAEA,WAASoB,iBAAT,GAA6B;AAC3B,UAAMC,oBAAoB,GAAGR,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACU,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA7B;AACA,UAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B;AACAF,IAAAA,kBAAkB,CAACM,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B;;AAEA,QAAIZ,YAAY,CAACa,UAAb,KAA4B,SAAhC,EAA2C;AACzC,UAAIb,YAAJ,CAAiB,iBAAjB,EAAoC;AAClCc,QAAAA,IAAI,EAAG,WAAUJ,SAAS,CAACK,MAAO;AADA,OAApC;AAGD;AACF;;AAED,WAASC,cAAT,GAA0B;AACxBZ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAED,WAASa,kBAAT,GAA8B;AAC5B,QAAI,CAACd,eAAL,EAAsB;AACpB;AACD;;AAED,UAAM;AAAEY,MAAAA;AAAF,QAAaZ,eAAnB;AAEA,QAAIe,eAAe,GAAGzB,iBAAiB,GAAGsB,MAA1C;;AAEA,QAAIG,eAAe,IAAIrB,qBAAvB,EACA;AACEqB,MAAAA,eAAe,GAAGA,eAAe,GAAGrB,qBAApC;AACAK,MAAAA,OAAO;AACR;;AAEDR,IAAAA,oBAAoB,CAACwB,eAAD,CAApB;AACAd,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAR,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,KADK;AAELW,MAAAA,OAFK;AAGLT,MAAAA,iBAHK;AAILC,MAAAA,oBAJK;AAKLC,MAAAA,mBALK;AAMLE,MAAAA,qBANK;AAOLD,MAAAA,sBAPK;AAQLS,MAAAA,iBARK;AASLD,MAAAA,kBATK;AAULD,MAAAA,eAVK;AAWLa,MAAAA,cAXK;AAYLC,MAAAA;AAZK,KADT;AAAA,cAgBG3B;AAhBH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD","sourcesContent":["/** Imports\n * ImportaÃ§Ã£o do createContext, useState, ReactNode, \n * useEffect da biblioteca react, alÃ©m da importaÃ§Ã£o dos\n * desafios contidos no arquivo challenges.json, \n */\nimport { createContext, useState, ReactNode, useEffect } from \"react\";\nimport challenges from \"../../challenges.json\";\n\ninterface Challenge {\n  type: \"body\" | \"eye\";\n  description: string;\n  amount: number;\n}\n\n/** interface ChallengesContextData\n *  DefiniÃ§Ã£o da estrutura de dados do context Countdown,\n * por meio da criaÃ§Ã£o de uma interface.  \n */\ninterface ChallengesContextData {\n  level: number;\n  currentExperience: number;\n  challengesCompleted: number;\n  experienceToNextLevel: number;\n  activeChallenge: Challenge;\n  levelUp: () => void;\n  startNewChallenge: () => void;\n  resetChallenge: () => void;\n  completedChallenge: () => void;\n}\n\ninterface ChallengesProviderProps {\n  children: ReactNode;\n}\n\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\n  const [level, setLevel] = useState(1);\n  const [currentExperience, setCurrentExperience] = useState(0);\n  const [challengesCompleted, setChallengesCompleted] = useState(0);\n\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  useEffect(() => {\n    Notification.requestPermission();\n  }, [])\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  const [activeChallenge, setActiveChallenge] = useState(null);\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio ðŸ¥³', {\n        body: `Valendo ${challenge.amount}xp!`\n      })\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completedChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const { amount } = activeChallenge\n\n    let finalExperience = currentExperience + amount\n\n    if (finalExperience >= experienceToNextLevel)\n    {\n      finalExperience = finalExperience - experienceToNextLevel\n      levelUp()\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1)\n  }\n\n  return (\n    <ChallengesContext.Provider\n      value={{\n        level,\n        levelUp,\n        currentExperience,\n        setCurrentExperience,\n        challengesCompleted,\n        experienceToNextLevel,\n        setChallengesCompleted,\n        startNewChallenge,\n        setActiveChallenge,\n        activeChallenge,\n        resetChallenge,\n        completedChallenge\n      }}\n    >\n      {children}\n    </ChallengesContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}